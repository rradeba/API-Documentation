{
  "swagger": "2.0",
  "info": {
    "description": "Factory Operations API",
    "version": "1.0.0",
    "title": "Factory Operations API"
  },
  "paths": {
    "/customer": {
      "post": {
        "summary": "Create a new customer",
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Customer created successfully",
            "schema": {
              "$ref": "#/definitions/Message"
            },
            "examples": {
              "application/json": {
                "message": "Created successfully!"
              }
            }
          },
          "400": {
            "description": "Invalid input or missing data",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Invalid",
                "details": "'customer_name' field is required."
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Rate limit exceeded",
                "details": "Request limit of 5 per minute."
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Internal Server Error",
                "details": "An unexpected error occurred."
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all customers",
        "responses": {
          "200": {
            "description": "List of customers retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Customer"
              }
            },
            "examples": {
              "application/json": [
                {
                  "customer_id": 1,
                  "customer_name": "John Doe",
                  "customer_email": "john.doe@example.com",
                  "customer_phone": "1234567890"
                },
                {
                  "customer_id": 2,
                  "customer_name": "Jane Smith",
                  "customer_email": "jane.smith@example.com",
                  "customer_phone": "0987654321"
                }
              ]
            }
          }
        }
      }
    },
    "/customer/{customer_id}": {
      "get": {
        "summary": "Get a customer by ID",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Customer"
            },
            "examples": {
              "application/json": {
                "customer_id": 1,
                "customer_name": "John Doe",
                "customer_email": "john.doe@example.com",
                "customer_phone": "1234567890"
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Not Found",
                "details": "ID 123 does not exist."
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Internal Server Error",
                "details": "An unexpected error occurred."
              }
            }
          }
        }
      }
    },
    "/product": {
      "post": {
        "summary": "Create a new product",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "schema": {
              "$ref": "#/definitions/Message"
            },
            "examples": {
              "application/json": {
                "message": "Product created successfully!"
              }
            }
          },
          "400": {
            "description": "Invalid input or missing data",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Invalid",
                "details": "'product_name' and 'product_price' fields are required."
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Internal Server Error",
                "details": "An unexpected error occurred."
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all products",
        "responses": {
          "200": {
            "description": "List of products retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            },
            "examples": {
              "application/json": [
                {
                  "product_id": 1,
                  "product_name": "Item A",
                  "product_price": 19.99
                },
                {
                  "product_id": 2,
                  "product_name": "Item B",
                  "product_price": 29.99
                }
              ]
            }
          }
        }
      }
    },
    "/order": {
      "post": {
        "summary": "Create a new order",
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created successfully",
            "schema": {
              "$ref": "#/definitions/Message"
            },
            "examples": {
              "application/json": {
                "message": "Order created successfully!"
              }
            }
          },
          "400": {
            "description": "Invalid input or missing data",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Invalid",
                "details": "'customer_id', 'product_id', 'quantity', and 'total_price' fields are required."
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Internal Server Error",
                "details": "An unexpected error occurred."
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all orders",
        "responses": {
          "200": {
            "description": "List of orders retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "customer_id": 1,
                  "product_id": 1,
                  "quantity": 2,
                  "total_price": 39.98
                },
                {
                  "id": 2,
                  "customer_id": 2,
                  "product_id": 2,
                  "quantity": 1,
                  "total_price": 29.99
                }
              ]
            }
          }
        }
      }
    },
    "/employee": {
      "post": {
        "summary": "Create a new employee",
        "parameters": [
          {
            "name": "employee",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Employee created successfully",
            "schema": {
              "$ref": "#/definitions/Message"
            },
            "examples": {
              "application/json": {
                "message": "Employee created successfully!"
              }
            }
          },
          "400": {
            "description": "Invalid input or missing data",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Invalid",
                "details": "'employee_name' and 'employee_position' fields are required."
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Internal Server Error",
                "details": "An unexpected error occurred."
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all employees",
        "responses": {
          "200": {
            "description": "List of employees retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Employee"
              }
            },
            "examples": {
              "application/json": [
                {
                  "employee_id": 1,
                  "employee_name": "Alice Johnson",
                  "employee_position": "Manager"
                },
                {
                  "employee_id": 2,
                  "employee_name": "Bob Smith",
                  "employee_position": "Developer"
                }
              ]
            }
          }
        }
      }
    },
    "/production": {
      "post": {
        "summary": "Create a new production record",
        "parameters": [
          {
            "name": "production",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Production"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Production record created successfully",
            "schema": {
              "$ref": "#/definitions/Message"
            },
            "examples": {
              "application/json": {
                "message": "Production record created successfully!"
              }
            }
          },
          "400": {
            "description": "Invalid input or missing data",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Invalid",
                "details": "'product_id', 'production_quantity', and 'production_date' fields are required."
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": "Internal Server Error",
                "details": "An unexpected error occurred."
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all production records",
        "responses": {
          "200": {
            "description": "List of production records retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Production"
              }
            },
            "examples": {
              "application/json": [
                {
                  "production_id": 1,
                  "product_id": 1,
                  "production_quantity": 100,
                  "production_date": "2024-10-01"
                },
                {
                  "production_id": 2,
                  "product_id": 2,
                  "production_quantity": 200,
                  "production_date": "2024-10-02"
                }
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Production": {
      "type": "object",
      "properties": {
        "production_id": {
          "type": "integer"
        },
        "product_id": {
          "type": "integer"
        },
        "production_quantity": {
          "type": "integer"
        },
        "production_date": {
          "type": "string",
          "format": "date"
        }
      },
      "required": ["product_id", "production_quantity", "production_date"]
    },
    "Product": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer"
        },
        "product_name": {
          "type": "string"
        },
        "product_price": {
          "type": "number",
          "format": "float"
        }
      },
      "required": ["product_name", "product_price"]
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "customer_id": {
          "type": "integer"
        },
        "product_id": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        },
        "total_price": {
          "type": "number",
          "format": "float"
        }
      },
      "required": ["customer_id", "product_id", "quantity", "total_price"]
    },
    "Employee": {
      "type": "object",
      "properties": {
        "employee_id": {
          "type": "integer"
        },
        "employee_name": {
          "type": "string"
        },
        "employee_position": {
          "type": "string"
        }
      },
      "required": ["employee_name", "employee_position"]
    },
    "Customer": {
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "integer"
        },
        "customer_name": {
          "type": "string"
        },
        "customer_email": {
          "type": "string",
          "format": "email"
        },
        "customer_phone": {
          "type": "string"
        }
      },
      "required": ["customer_name", "customer_email", "customer_phone"]
    },
    "Message": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "details": {
          "type": "string"
        }
      }
    }
  }
}
